# -*- coding: utf-8 -*-
"""Master_Project_dataset_handling_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RmE7dNCdXB0hHFNtmW9D2TCNXFvP-Pra
"""

import pandas as pd

# Read the dataset
input_file = 'metadata_new_1.csv'
metadata_df = pd.read_csv(input_file)

# Define a function to create a mapping table
def create_mapping_table(column_name, dataset):
    unique_values = dataset[column_name].dropna().unique()
    mapping_table = {value: idx + 1 for idx, value in enumerate(unique_values)}
    return mapping_table

# Create mapping tables for the specified columns
manufacturer_mapping = create_mapping_table('manufacturer', metadata_df)
rated_mapping = create_mapping_table('rated', metadata_df)

rated_mapping

categories = metadata_df[['category_1', 'category_2', 'category_3', 'category_4', 'category_5']]
categories_combined = pd.Series(categories.values.ravel('F')).dropna().unique()
category_mapping = {value: idx + 1 for idx, value in enumerate(categories_combined)}

category_mapping

# Map the dataset with the IDs
metadata_df['manufacturer_id'] = metadata_df['manufacturer'].map(manufacturer_mapping)
metadata_df['rated_id'] = metadata_df['rated'].map(rated_mapping)

for i in range(1, 6):
    metadata_df[f'category_{i}_id'] = metadata_df[f'category_{i}'].map(category_mapping)

metadata_df

columns_to_delete = ['manufacturer', 'rated', 'category_1', 'category_2', 'category_3', 'category_4', 'category_5']

# Drop the original columns from the dataset
metadata_df = metadata_df.drop(columns=columns_to_delete)

metadata_df

output_file = 'metadata_new_2.csv'
metadata_df.to_csv(output_file, index=False)

manufacturer_mapping_file = 'manufacturer_mapping.csv'
rated_mapping_file = 'rated_mapping.csv'
category_mapping_file = 'category_mapping.csv'

pd.DataFrame(list(manufacturer_mapping.items()), columns=['Value', 'ID']).to_csv(manufacturer_mapping_file, index=False)
pd.DataFrame(list(rated_mapping.items()), columns=['Value', 'ID']).to_csv(rated_mapping_file, index=False)
pd.DataFrame(list(category_mapping.items()), columns=['Value', 'ID']).to_csv(category_mapping_file, index=False)